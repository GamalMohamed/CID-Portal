@model VacationsPortal.ViewModels.SettlementViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Trip</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (Model.ExpensesReport == null)
    {
        @Html.HiddenFor(model => model.CashInAdvance.Id)
        <div class="form-group">
            @Html.LabelFor(model => model.CashInAdvance.SettledAmount, "Settled Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CashInAdvance.SettledAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CashInAdvance.SettledAmount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CashInAdvance.OperationsComment, "Operations Comment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CashInAdvance.OperationsComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CashInAdvance.OperationsComment, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CashInAdvance.CashInAdvanceStatus, "CIA Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CashInAdvance.CashInAdvanceStatus, ViewBag.CIAStatuses as SelectList, "-select status-", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CashInAdvance.CashInAdvanceStatus, "", new { @class = "text-danger" })
            </div>
        </div>
    }
    else
    {
        @Html.HiddenFor(model => model.ExpensesReport.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.ExpensesReport.SettledAmount, "Settled Amount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpensesReport.SettledAmount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpensesReport.SettledAmount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ExpensesReport.OperationsComment, "Operations Comment", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExpensesReport.OperationsComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExpensesReport.OperationsComment, "", new { @class = "text-danger" })
            </div>
        </div>
        if (Model.CashInAdvance != null)
        {
            @Html.HiddenFor(model => model.CashInAdvance.Id)
            <div class="form-group">
                @Html.LabelFor(model => model.CashInAdvance.CashInAdvanceStatus, "CIA Status", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.CashInAdvance.CashInAdvanceStatus, ViewBag.CIAStatuses as SelectList, "-select status-", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CashInAdvance.CashInAdvanceStatus, "", new { @class = "text-danger" })
                </div>
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(model => model.ExpensesReport.ExpenseReportStatu, "Expense Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExpensesReport.StatusID, ViewBag.ExpenseStatuses as SelectList, "-select status-", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExpensesReport.ExpenseReportStatu, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>